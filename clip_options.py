# generated by datamodel-codegen:
#   filename:  inter.json
#   timestamp: 2022-08-14T17:25:17+00:00

from __future__ import annotations
import json

from typing import List, Tuple, Optional

from pydantic import BaseModel


class _ClipOptions(BaseModel):
    RN50_openai: Optional[Tuple[str, str]]
    RN50_yfcc15m: Optional[Tuple[str, str]]
    RN50_cc12m: Optional[Tuple[str, str]]
    RN50_quickgelu_openai: Optional[Tuple[str, str]]
    RN50_quickgelu_yfcc15m: Optional[Tuple[str, str]]
    RN50_quickgelu_cc12m: Optional[Tuple[str, str]]
    RN101_openai: Optional[Tuple[str, str]]
    RN101_yfcc15m: Optional[Tuple[str, str]]
    RN101_quickgelu_openai: Optional[Tuple[str, str]]
    RN101_quickgelu_yfcc15m: Optional[Tuple[str, str]]
    RN50x4_openai: Optional[Tuple[str, str]]
    RN50x16_openai: Optional[Tuple[str, str]]
    RN50x64_openai: Optional[Tuple[str, str]]
    ViT_B_32_openai: Optional[Tuple[str, str]]
    ViT_B_32_laion2b_e16: Optional[Tuple[str, str]]
    ViT_B_32_laion400m_e31: Optional[Tuple[str, str]]
    ViT_B_32_laion400m_e32: Optional[Tuple[str, str]]
    ViT_B_32_quickgelu_openai: Optional[Tuple[str, str]]
    ViT_B_32_quickgelu_laion400m_e31: Optional[Tuple[str, str]]
    ViT_B_32_quickgelu_laion400m_e32: Optional[Tuple[str, str]]
    ViT_B_16_openai: Optional[Tuple[str, str]]
    ViT_B_16_laion400m_e31: Optional[Tuple[str, str]]
    ViT_B_16_laion400m_e32: Optional[Tuple[str, str]]
    ViT_B_16_plus_240_laion400m_e31: Optional[Tuple[str, str]]
    ViT_B_16_plus_240_laion400m_e32: Optional[Tuple[str, str]]
    ViT_L_14_openai: Optional[Tuple[str, str]]
    ViT_L_14_laion400m_e31: Optional[Tuple[str, str]]
    ViT_L_14_laion400m_e32: Optional[Tuple[str, str]]
    ViT_L_14_336_openai: Optional[Tuple[str, str]]

    def from_json(self, json_path: str) -> _ClipOptions:
        # json_data =
        return _ClipOptions.parse_raw(open(json_path, "r", encoding="utf-8"))


def get_clip_options() -> "_ClipOptions":
    with open("./clip_options.json") as f:
        data = json.loads(f.read())
    return _ClipOptions(**data)


ClipOptions = get_clip_options()
